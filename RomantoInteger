/* Evaluate from right to left and if the current value is less than previous then subtract to result else add to the result */
class Solution {
    public int romanToInt(String s) {
        Map<Character, Integer> map = new HashMap<Character, Integer>();

        map.put('I',1);
        map.put('V',5);
        map.put('X',10);
        map.put('L',50);
        map.put('C',100);
        map.put('D',500);
        map.put('M',1000);
        int ans=0, curmax=-1;
        for(int i= s.length()-1; i>=0;i--)
        {
            int currvalue = map.get(s.charAt(i));
            curmax = Math.max(currvalue,curmax);
            ans = curmax < currvalue ? ans-currvalue : ans + currvalue;
        }
        return ans;

    }
}
